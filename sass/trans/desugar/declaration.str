module desugar/declaration

imports 
  src-gen/signatures/Declaration-sig
  desugar/common

signature
  constructors
    GlobalVarDeclaration : String * Exp * List(VariableDeclarationFlag) -> VariableDeclaration

strategies
  desugar-declarations = try(alltd(desugar-dec))
                          ; topdown(try(desugar-namespace-prop))
                          ; topdown(try(flatten-namespace-prop))
                          
/**
 * Variable declarations
 */
rules

  desugar-dec: VarDeclaration(name, e, flags) -> 
    GlobalVarDeclaration(<dehyphenize> name, e, flags) 
      where <member> (Global(), flags)
  desugar-dec: VarDeclaration(name, e, flags) -> 
    VarDeclaration(<dehyphenize> name, e, flags)

/** 
 * Namespace properties
 */
rules
  flatten-namespace-prop: BlockDeclaration(s, decls) -> BlockDeclaration(s, <flatten-list> decls)
  desugar-namespace-prop: NamespacePropertyDeclaration(prop, decs) -> 
    <cart(id); map(merge-namespace-prop); flatten-list> ([prop], decs) 
  desugar-namespace-prop: NamespacePropertyDeclarationExp(prop, e, decs) ->
    [PropertyDeclaration(prop, e) | propertyDeclarations] where
    propertyDeclarations := 
      <cart(id); map(merge-namespace-prop); flatten-list> ([prop], decs)
    
     
  merge-namespace-prop: (propName, PropertyDeclaration(prop, e)) -> 
    PropertyDeclaration(<concat-strings> [propName, "-", prop], e)
  merge-namespace-prop: (propName, NamespacePropertyDeclaration(prop, decs)) ->
    NamespacePropertyDeclaration(<concat-strings> [propName, "-", prop], decs)
  merge-namespace-prop: (propName, NamespacePropertyDeclarationExp(prop, e, decs)) ->
    NamespacePropertyDeclarationExp(<concat-strings> [propName, "-", prop], e, decs)
    