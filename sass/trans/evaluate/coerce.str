module evaluate/coerce

imports
  evaluate/evaluate
  desugar/expression/-
  src-gen/signatures/String-sig
  src-gen/signatures/Expression-sig
  src-gen/signatures/Colour-sig
  analysis/sass

strategies

  // Coercion is done repeatedly, since coercion can be 
  // transitive, e.g. int -> float -> string
  coerce = repeat(coerce-repeat); Fst
  coerce-repeat: (l, t) -> (<coerce-to> (l, t), t)

  coerce-to: (Length(s, u), target) -> Length(<coerce-repeat> (s, target), u)
  coerce-to: (Int(v), FloatT()) -> Float(v)
  coerce-to: (Int(v), StringT()) -> String(v, None())
  coerce-to: (Float(v), StringT()) -> String(v, None()) // TODO: Embed quote type in type
  coerce-to: (ColourLabel(l), StringT()) -> String(l, None())
  coerce-to: (Hex(r, g, b), StringT()) -> 
    String(<concat-strings> ["#" | <map(int-to-string)> [r, g, b]], None())
    
  coerce-to: (Null(), StringT())  -> String("", None())
  coerce-to: (Null(), BoolT())    -> False()
  coerce-to: (_, BoolT())         -> True()
