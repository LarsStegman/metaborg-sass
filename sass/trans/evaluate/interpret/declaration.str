module interpret/declaration

imports
  src-gen/signatures/Declaration-sig
  desugar/declaration

imports
  evaluate/interpret/interpret
  evaluate/expression


rules
  interp-item(|vars): VarDeclaration(l, exp) ->
    (VarDeclaration(l, v), globalVars, localVars)
  with
    v := <evaluate-exp(|vars)> exp
    ; globalVars := <create-store> ()
    ; localVars := <create-store> (l, v)
  
  interp-item(|vars): GlobalVarDeclaration(l, exp) ->
    (GlobalVarDeclaration(l, v), globalVars, localVars)
  with
    v := <evaluate-exp(|vars)> exp
    ; globalVars := <create-store> (l, v)
    ; localVars := <create-store> (l, v)
  
  interp-item(|vars): BlockDeclaration(selec, decls) ->
    (BlockDeclaration(selec, d), globalVars, globalVars)
  with
    (d, globalVars) := <interpret-items(|vars)> decls
  
  interp-item(|vars): PropertyDeclaration(p, exp) ->
    (PropertyDeclaration(p, e), globalVars, localVars)
  with
    e := <evaluate-exp(|vars)> exp
    ; globalVars := <create-store> ()
    ; localVars  := <create-store> ()
