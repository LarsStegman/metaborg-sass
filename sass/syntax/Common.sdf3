module Common

lexical syntax

  ID             = [a-zA-Z] [a-zA-Z0-9\-\_]* 
  INT            = "-"? [0-9]+ 
  FLOAT          = INT "." [0-9]+
  HEXCOLOUR      = "#" HEXGroup HEXGroup? 
  HEXGroup       = [0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]
  PROPERTY       = [\-\@]? [a-zA-Z0-9\-\_]+
  IdSelector     = "#" ID
  ClassSelector  = "." ID
  LengthUnit     = ID
  LengthUnit     = "%"
  
  STRING         = "\"" StringChar* "\""
  StringChar     = ~[\"\n] 
  StringChar     = "\\\"" 
  StringChar     = BackSlashChar 
  BackSlashChar  = "\\" 
  LAYOUT         = [\ \t\n\r] 
  LAYOUT         = "//" ~[\n\r]* NewLineEOF 
  NewLineEOF     = [\n\r] 
  NewLineEOF     = EOF 
  EOF            =  

  ID = "null"   {reject}
  ID = "true"   {reject}
  ID = "false"  {reject}

lexical restrictions

  // Ensure greedy matching for lexicals
  INT           -/- [0-9]
  ID            -/- [a-zA-Z0-9\_\-]
  HEXCOLOUR     -/- [a-zA-Z0-9]
  PROPERTY      -/- [a-zA-Z0-9\-\_]
  
  // EOF may not be followed by any char
  
  EOF           -/- ~[]

  
  // Backslash chars in strings may not be followed by " 
  
  BackSlashChar -/- [\"]

context-free restrictions

  // Ensure greedy matching for comments
  
  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
