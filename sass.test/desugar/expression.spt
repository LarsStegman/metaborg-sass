module desugar-expression-test

language sass

start symbol Exp

test desugar hex shorthand to full hex [[
#1af
]] run desugar-exp to Hex("11aaff")

test desugar addition [[
1 + 1
]] run desugar-exp to BinExp(Add(), Number("1"), Number("1"))

test desugar subtraction [[
1 - 1
]] run desugar-exp to BinExp(Sub(), Number("1"), Number("1"))

test desugar multiplication [[
1 * 1
]] run desugar-exp to BinExp(Mul(), Number("1"), Number("1"))
//
test desugar division [[
1 / 1
]] run desugar-exp to BinExp(Div(), Number("1"), Number("1"))

test desugar modulo [[
1 % 1
]] run desugar-exp to BinExp(Mod(), Number("1"), Number("1"))
//
test desugar complex expression [[
1 % 1 == 0
]] run desugar-exp to BinExp(Eq(), BinExp(Mod(), Number("1"), Number("1")), Number("0"))

test desugar or [[
true or false
]] run desugar-exp to BinExp(Or(), True(), False())

test desugar and [[
true and false
]] run desugar-exp to BinExp(And(), True(), False())

test desugar equal [[
true == false
]] run desugar-exp to BinExp(Eq(), True(), False())

test desugar not equal [[
true != false
]] run desugar-exp to BinExp(InEq(), True(), False())

test desugar greater than [[
5 > 4
]] run desugar-exp to BinExp(Gt(), Int("5"), Int("4"))

test desugar greater equal than [[
5 >= 4
]] run desugar-exp to BinExp(Gte(), Int("5"), Int("4"))

test desugar less than [[
5 < 4
]] run desugar-exp to BinExp(Lt(), Int("5"), Int("4"))

test desugar less equal than [[
5 <= 4
]] run desugar-exp to BinExp(Lte(), Int("5"), Int("4"))

test desugar not than [[
not true 
]] run desugar-exp to UnExp(Not(), True())
